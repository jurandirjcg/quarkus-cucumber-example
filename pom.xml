<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.myh3alth</groupId>
	<artifactId>paciente-service</artifactId>
	<name>Paciente Service</name>
	<version>1.0.0-RC3</version>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.compiler.parameters>true</maven.compiler.parameters>
		<!-- <maven.compiler.source>1.8</maven.compiler.source> -->
		<maven.compiler.target>1.8</maven.compiler.target>
<!-- 		<maven.build.timestamp.format>dd/MM/yyyy HH:mm:ss</maven.build.timestamp.format> -->
		<!-- FALSE FOR PROD -->
		<skipReports>true</skipReports>
		<skipCheck>true</skipCheck>
		<skipTests>false</skipTests>
		<test-postgresql-user>sa_pvfogoest</test-postgresql-user>
		<test-postgresql-passwd>qa_pass</test-postgresql-passwd>
		<test-postgresql-port>5433</test-postgresql-port>
		<test-postgresql-db>qadb</test-postgresql-db>
		<!-- dependencies -->
		<canary.version>2.0</canary.version>
		<cucumber-java.version>6.3.0</cucumber-java.version>
		<commons-beanutils.version>1.9.4</commons-beanutils.version>
		<commons-collections4.version>4.4</commons-collections4.version>
		<hibernate-jpamodelgen.version>5.4.21.Final</hibernate-jpamodelgen.version>
		<quarkus-platform.version>1.7.0.Final</quarkus-platform.version>
		<quarkus-plugin.version>1.7.0.Final</quarkus-plugin.version>
		<!-- plugins -->
		<compiler-plugin.version>3.8.1</compiler-plugin.version>
		<docker-maven-plugin.version>0.33.0</docker-maven-plugin.version>
		<embedded-postgresql-maven-plugin.version>1.2.2</embedded-postgresql-maven-plugin.version>
		<jacoco.version>0.8.4</jacoco.version>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven-cucumber-reporting.version>4.11.0</maven-cucumber-reporting.version>
		<maven-failsafe-plugin.version>2.18.1</maven-failsafe-plugin.version>
		<maven-surefire-report-plugin.version>3.0.0-M3</maven-surefire-report-plugin.version>
		<org.jacoco.core.version>0.8.3</org.jacoco.core.version>
		<replacer.version>1.5.2</replacer.version>
		<surefire-plugin.version>2.22.1</surefire-plugin.version>
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>io.quarkus</groupId>
				<artifactId>quarkus-bom</artifactId>
				<version>${quarkus-platform.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-resteasy</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-hibernate-orm</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-infinispan-client</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-hibernate-validator</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-smallrye-openapi</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-smallrye-fault-tolerance</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-smallrye-health</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-smallrye-metrics</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-arc</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-resteasy-jsonb</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-jaxb</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-flyway</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-jdbc-postgresql</artifactId>
		</dependency>
        <!-- Canary -->
		<dependency>
			<groupId>br.com.jgon</groupId>
			<artifactId>canary</artifactId>
			<version>${canary.version}</version>
		</dependency>
		<!-- Test Dependecies -->
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-junit5</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-java8</artifactId>
			<version>${cucumber-java.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-junit</artifactId>
			<version>${cucumber-java.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jacoco</groupId>
			<artifactId>org.jacoco.agent</artifactId>
			<classifier>runtime</classifier>
			<scope>test</scope>
			<version>${jacoco.version}</version>
		</dependency>
        <dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>testcontainers</artifactId>
			<version>1.11.4</version>
			<scope>test</scope>
		</dependency>
        <dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>postgresql</artifactId>
			<version>1.14.3</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<finalName>quarkus-cucumber-example</finalName>
		<!-- Filtrar resources -->
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<groupId>io.quarkus</groupId>
				<artifactId>quarkus-maven-plugin</artifactId>
				<version>${quarkus-platform.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${compiler-plugin.version}</version>
				<configuration>
					<compilerArgs>
						<arg>-AfullyAnnotationConfigured=true</arg>
					</compilerArgs>
					<annotationProcessorPaths>
						<annotationProcessorPath>
							<groupId>org.hibernate</groupId>
							<artifactId>hibernate-jpamodelgen</artifactId>
							<version>${hibernate-jpamodelgen.version}</version>
						</annotationProcessorPath>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<!-- <plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>copy-resources</id> -->
						<!-- here the phase you need -->
						<!-- <phase>validate</phase>
						<goals>
						<goal>copy-resources</goal>
						</goals>
						<configuration>
						<outputDirectory>${project.build.outputDirectory}/db/migration</outputDirectory>
						<resources>          
							<resource>
								<directory>docs/db/scripts</directory>
								<filtering>true</filtering>
							</resource>
						</resources>              
						</configuration>            
					</execution>
				</executions>
			</plugin> -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${surefire-plugin.version}</version>
				<configuration>
					<systemProperties>
						<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
					</systemProperties>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>3.1.0</version>
				<dependencies>
					<dependency>
						<groupId>com.puppycrawl.tools</groupId>
						<artifactId>checkstyle</artifactId>
						<version>8.26</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>verify-style</id>
						<phase>process-classes</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<skip>${skipCheck}</skip>
					<configLocation>checkstyle.xml</configLocation>
					<suppressionsLocation>checkstyle-suppressions.xml</suppressionsLocation>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.google.code.maven-replacer-plugin</groupId>
				<artifactId>replacer</artifactId>
				<version>${replacer.version}</version>
				<executions>
					<execution>
						<id>replace-cucumber-files</id>
						<!-- <phase>process-test-resources</phase> -->
						<phase>prepare-package</phase>
						<goals>
							<goal>replace</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<includes>
						<include>docs/ucs/**/*.md</include>
					</includes>
					<inputFilePattern>.md</inputFilePattern>
					<outputFilePattern>.feature</outputFilePattern>
					<preserveDir>false</preserveDir>
					<outputDir>target/features</outputDir>
					<replacements>
						<replacement>
							<token><![CDATA[(?<=(UCS[\ \w\-\–áàâãéèêíïóôõöúçñ]{5,150})[\s\S]{0,700}\@[\w\-\_]{3,15}\s{1,3})[\#\ ]{2,10}Feature[\ \:]{0,5}]]></token>
							<value>Feature: $1</value>
						</replacement>
						<replacement>
							<token><![CDATA[[\s\S]*<!BDD.START>]]></token>
							<value>#language: en</value>
						</replacement>
						<replacement>
							<token><![CDATA[<!BDD.END>[\s\S]*]]></token>
							<value></value>
						</replacement>
						<replacement>
							<token><![CDATA[(`[\'\"\ ]*\<(\w+)\>[\'\"\ ]*`)]]></token>
							<value>$2:$1</value>
						</replacement>
						<replacement>
							<token>#+\sTag(?=[\w\@\s\#\-\_]+(\n)Feature:\s*(.*)\s?)</token>
							<value># ${maven.build.timestamp} - Automatically generated using the Use Case: $2 $1$1@$2</value>
						</replacement>
						<!-- Expressao nao funciona no java 1.8.0_241 -->
						<replacement>
							<token><![CDATA[(?<=\@[\w\.\-\–\_áàâãéèêíïóôõöúçñ\ ]*)[\ ](?=[\ \w\.\-\–\_áàâãéèêíïóôõöúçñ]*\n)]]></token>
							<value></value>
						</replacement>
						<!-- // -->
						<replacement>
							<token>#+\sRule\s?:?</token>
							<value>Rules:</value>
						</replacement>
						<replacement>
							<token>#+\sContext\s?:</token>
							<value>Context:</value>
						</replacement>
						<replacement>
							<token>#+\s*Scenario\sOutline\s?:</token>
							<value>Scenario Outline:</value>
						</replacement>
						<replacement>
							<token>#+\sScenario\s?:</token>
							<value>Scenario:</value>
						</replacement>
						<replacement>
							<token>`</token>
							<value></value>
						</replacement>
						<replacement>
							<token>\*\*</token>
							<value></value>
						</replacement>
						<replacement>
							<token>\(?(\[[\w\-]+\])\s?\([\w\-\#]+\)\)?</token>
							<value>$1</value>
						</replacement>
						<replacement>
							<token>\ \(?\[[\w\d\,\- \[\]\(\)\#áàâãéèêíïóôõöúçñ]+\){1,2}\ *</token>
							<value></value>
						</replacement>
						<replacement>
							<token>[\ \t]*\|([\ \t]*\-{3,}[\ \t]*\|)+\ {0,}\n</token>
							<value></value>
						</replacement>
					</replacements>
					<regexFlags>
						<regexFlag>CASE_INSENSITIVE</regexFlag>
						<regexFlag>MULTILINE</regexFlag>
					</regexFlags>
				</configuration>
			</plugin>
			<!-- Test Plugins -->
			<plugin>
				<groupId>net.masterthought</groupId>
				<artifactId>maven-cucumber-reporting</artifactId>
				<version>${maven-cucumber-reporting.version}</version>
				<executions>
					<execution>
						<id>execution</id>
						<phase>verify</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<projectName>QuarkusCucumberExample</projectName>
							<skip>${skipReports}</skip>
							<outputDirectory>${project.reporting.outputDirectory}/cucumber-report-html</outputDirectory>
							<inputDirectory>${project.build.directory}</inputDirectory>
							<jsonFiles>
								<param>**/*.json</param>
							</jsonFiles>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven-failsafe-plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<systemProperties>
								<jacoco-agent.destfile>${project.build.directory}/jacoco-it.exec</jacoco-agent.destfile>
							</systemProperties>
							<environmentVariables>
								<test-container-pg-user>${test-postgresql-user}</test-container-pg-user>
								<test-container-pg-passwd>${test-postgresql-passwd}</test-container-pg-passwd>
								<test-container-pg-port>${test-postgresql-port}</test-container-pg-port>
								<test-container-pg-db>${test-postgresql-db}</test-container-pg-db>
							</environmentVariables>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<configuration>
					<excludes>
						<exclude>**/entity/*_.*</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>instrument-ut</id>
						<goals>
							<goal>instrument</goal>
						</goals>
					</execution>
					<execution>
						<id>restore-ut</id>
						<goals>
							<goal>restore-instrumented-classes</goal>
						</goals>
					</execution>
					<execution>
						<id>report-ut</id>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/jacoco-ut.exec</dataFile>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>instrument-it</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>instrument</goal>
						</goals>
					</execution>
					<execution>
						<id>restore-it</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>restore-instrumented-classes</goal>
						</goals>
					</execution>
					<execution>
						<id>report-it</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/jacoco-it.exec</dataFile>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>merge-results</id>
						<phase>verify</phase>
						<goals>
							<goal>merge</goal>
						</goals>
						<configuration>
							<fileSets>
								<fileSet>
									<directory>${project.build.directory}</directory>
									<includes>
										<include>*.exec</include>
									</includes>
								</fileSet>
							</fileSets>
							<destFile>${project.build.directory}/jacoco.exec</destFile>
						</configuration>
					</execution>
					<execution>
						<id>post-merge-report</id>
						<phase>verify</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/jacoco.exec</dataFile>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${maven-surefire-report-plugin.version}</version>
				<configuration>
					<skipFailsafeReport>${skipReports}</skipFailsafeReport>
					<skipSurefireReport>${skipReports}</skipSurefireReport>
				</configuration>
				<executions>
					<execution>
						<id>reports</id>
						<phase>verify</phase>
						<goals>
							<goal>failsafe-report-only</goal>
							<goal>report-only</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>native</id>
			<activation>
				<property>
					<name>native</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>io.quarkus</groupId>
						<artifactId>quarkus-maven-plugin</artifactId>
						<version>${quarkus-platform.version}</version>
						<executions>
							<execution>
								<goals>
									<goal>native-image</goal>
								</goals>
								<configuration>
									<enableHttpUrlHandler>true</enableHttpUrlHandler>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>${surefire-plugin.version}</version>
						<executions>
							<execution>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
								<configuration>
									<systemProperties>
										<native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
									</systemProperties>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- Profile utilizado para o desenvolvimento de novas features (tag @desenv) -->
		<profile>
			<id>develop-features</id>
			<activation>
				<property>
					<name>develop-features</name>
				</property>
			</activation>
			<properties>
				<skipTests>true</skipTests>
				<skipReports>true</skipReports>
				<stopServer>false</stopServer>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
        				<artifactId>maven-jar-plugin</artifactId>
						<configuration>
							<skip>${!stopServer}</skip>
						</configuration>
					</plugin>
					<plugin>
						<groupId>io.quarkus</groupId>
						<artifactId>quarkus-maven-plugin</artifactId>
						<version>${quarkus-plugin.version}</version>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco.version}</version>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-checkstyle-plugin</artifactId>
						<version>3.1.0</version>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>${maven-failsafe-plugin.version}</version>
						<executions>
							<execution>
								<goals>
									<goal>integration-test</goal>
								</goals>
								<configuration>
									<test>RunCucumberIT</test>
									<skipTests>false</skipTests>
									<environmentVariables>
										<stop-server>${stopServer}</stop-server>
										<cucumber.filter.tags>@desenv</cucumber.filter.tags>
										<cucumber.ansi-colors.disabled>false</cucumber.ansi-colors.disabled>
									</environmentVariables>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
